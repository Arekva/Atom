// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.InteropServices;

namespace SPIRVCross.Base
{
	[StructLayout(LayoutKind.Sequential)]
	internal partial struct spvc_reflected_resource
	{
		public u32 id;
		public u32 base_type_id;
		public u32 type_id;
		public unsafe u8* name;
	}

	[StructLayout(LayoutKind.Sequential)]
	internal partial struct spvc_entry_point
	{
		public SpvExecutionModel execution_model;
		public unsafe u8* name;
	}

	[StructLayout(LayoutKind.Sequential)]
	internal partial struct spvc_combined_image_sampler
	{
		public u32 combined_id;
		public u32 image_id;
		public u32 sampler_id;
	}

	[StructLayout(LayoutKind.Sequential)]
	internal partial struct spvc_specialization_constant
	{
		public u32 id;
		public u32 constant_id;
	}

	[StructLayout(LayoutKind.Sequential)]
	internal partial struct spvc_buffer_range
	{
		public u32 index;
		public nuint offset;
		public nuint range;
	}

	[StructLayout(LayoutKind.Sequential)]
	internal partial struct spvc_hlsl_root_constants
	{
		public u32 start;
		public u32 end;
		public u32 binding;
		public u32 space;
	}

	[StructLayout(LayoutKind.Sequential)]
	internal partial struct spvc_hlsl_vertex_attribute_remap
	{
		public u32 location;
		public unsafe u8* semantic;
	}

	[StructLayout(LayoutKind.Sequential)]
	internal partial struct spvc_msl_vertex_attribute
	{
		public u32 location;
		public u32 msl_buffer;
		public u32 msl_offset;
		public u32 msl_stride;
		public bool per_instance;
		public spvc_msl_vertex_format format;
		public SpvBuiltIn builtin;
	}

	[StructLayout(LayoutKind.Sequential)]
	internal partial struct spvc_msl_shader_input
	{
		public u32 location;
		public spvc_msl_vertex_format format;
		public SpvBuiltIn builtin;
		public u32 vecsize;
	}

	[StructLayout(LayoutKind.Sequential)]
	internal partial struct spvc_msl_resource_binding
	{
		public SpvExecutionModel stage;
		public u32 desc_set;
		public u32 binding;
		public u32 msl_buffer;
		public u32 msl_texture;
		public u32 msl_sampler;
	}

	[StructLayout(LayoutKind.Sequential)]
	internal partial struct spvc_msl_constexpr_sampler
	{
		public spvc_msl_sampler_coord coord;
		public spvc_msl_sampler_filter min_filter;
		public spvc_msl_sampler_filter mag_filter;
		public spvc_msl_sampler_mip_filter mip_filter;
		public spvc_msl_sampler_address s_address;
		public spvc_msl_sampler_address t_address;
		public spvc_msl_sampler_address r_address;
		public spvc_msl_sampler_compare_func compare_func;
		public spvc_msl_sampler_border_color border_color;
		public float lod_clamp_min;
		public float lod_clamp_max;
		public i32 max_anisotropy;
		public bool compare_enable;
		public bool lod_clamp_enable;
		public bool anisotropy_enable;
	}

	[StructLayout(LayoutKind.Sequential)]
	internal partial struct spvc_msl_sampler_ycbcr_conversion
	{
		public u32 planes;
		public spvc_msl_format_resolution resolution;
		public spvc_msl_sampler_filter chroma_filter;
		public spvc_msl_chroma_location x_chroma_offset;
		public spvc_msl_chroma_location y_chroma_offset;
		public spvc_msl_component_swizzle swizzle_0;
		public spvc_msl_component_swizzle swizzle_1;
		public spvc_msl_component_swizzle swizzle_2;
		public spvc_msl_component_swizzle swizzle_3;
		public spvc_msl_sampler_ycbcr_model_conversion ycbcr_model;
		public spvc_msl_sampler_ycbcr_range ycbcr_range;
		public u32 bpc;
	}

	[StructLayout(LayoutKind.Sequential)]
	internal partial struct spvc_hlsl_resource_binding_mapping
	{
		public u32 register_space;
		public u32 register_binding;
	}

	[StructLayout(LayoutKind.Sequential)]
	internal partial struct spvc_hlsl_resource_binding
	{
		public SpvExecutionModel stage;
		public u32 desc_set;
		public u32 binding;
		public spvc_hlsl_resource_binding_mapping cbv;
		public spvc_hlsl_resource_binding_mapping uav;
		public spvc_hlsl_resource_binding_mapping srv;
		public spvc_hlsl_resource_binding_mapping sampler;
	}

}
